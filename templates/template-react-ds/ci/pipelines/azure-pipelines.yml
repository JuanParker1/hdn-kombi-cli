pool:
  vmImage: 'ubuntu-latest'

trigger:
  branches:
    include:
      - master
      - release/*

variables:
  projectName: <%= fullName %>
  appFolder: ''
  DEPLOY_VERSION: '$(Build.BuildId)'
  StorageAccountName: 'storagecp1234'
  npm_config_cache: '$(Pipeline.Workspace)/.npm'
  FolderPrefix: '$(Build.SourceBranchName)'

stages:
  - stage: CI
    displayName: 'Continuous Integration'
    jobs:
      - job: Build
        steps:
          - checkout: self
            persistCredentials: true
          - task: NpmAuthenticate@0
            inputs:
              workingFile: '.npmrc'
          - task: CmdLine@2
            displayName: Checkout $(Build.SourceBranchName)
            inputs:
              script: |
                source=$(Build.SourceBranch)
                git checkout ${source#"refs/heads/"}
                git update-index --assume-unchanged .npmrc
                git config --global receive.advertisePushOptions true
                git config --global user.email "email@hdn.digital"
                git config --global user.name "Yout Name"
          - template: ../templates/build-template.yml
            parameters:
              steps:
                - script: |
                    (yarn install)
                  displayName: 'Install dependencies'
                - script: |
                    (yarn build)
                  displayName: 'Build packages'
                - script: |
                    (yarn new-version)
                  displayName: 'Generate versions'
                - script: |
                    (yarn release)
                  displayName: 'Release packages'

  - stage: CD
    displayName: 'Continuous Delivery'
    jobs:
      - job: Publish
        steps:
          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | yarn.lock'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(npm_config_cache)
            displayName: Cache npm

          - task: CmdLine@2
            displayName: Install yarn ci package
            inputs:
              script: yarn ci

          - task: CmdLine@2
            displayName: Build Storybook
            inputs:
              script: yarn build-storybook

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/storybook-static'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - script: |
              npm install -g netlify-cli
              netlify deploy --prod --dir '$(Build.ArtifactStagingDirectory)'
            displayName: 'Netlify Deploy'
            env:
              NETLIFY_SITE_ID: $(site_id)
              NETLIFY_AUTH_TOKEN: $(auth_token)
